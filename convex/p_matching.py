import numpy as np
import matplotlib.pyplot as plt

x005=np.array(range(0,55,5))

x01=np.array(range(0,105,5))

x10=np.array(range(50,1050,50))

x05=np.array(range(0,510,10))

x50=np.array(range(100,5100,100))

p03=[-0.06894684818889688, -0.14053903679483104, -0.21488063976343305, -0.292231600276822, 
-0.3725599178757329, -0.4562845473617415, -0.5433239982863867, -0.6343127486011367, 
-0.7287673178133722, -0.8275999106283497, -0.9305728287082198, -1.0378734637730946, 
-1.1503509212566296, -1.2677027635489235, -1.3898804281791897, -1.5188720445553467, 
-1.6528920858079972, -1.7928220483653645, -1.9400847533685017, -2.0940423225970695, 
-2.25451042377771, -2.4247336277156166, -2.600972991506977, -2.787413685375195, -2.9809601525741773]

p04=[-0.11584219480705646, -0.23915299379077573, -0.3699599458035819, -0.5112044221677139, 
-0.660792066402625, -0.8226940146633231, -0.9945143347059733, -1.1804051494665535, 
-1.3823117263485893, -1.5893307334792697, -1.8276953328517904, -2.078782350993764, 
-2.346766306711976, -2.6340827752532285, -2.957886004516429, -3.282477771395394, 
-3.6661154904156565, -4.050622074202973, -4.478473748542872,-4.982812706942082]

p0525=[-0.1163676024297855, -0.240261484581096, -0.37274584529060123, -0.5139302258930635, 
-0.6653594225850695, -0.8275186962747789, -1.0018107339709246, -1.1889949738089474, 
-1.3903881978460457, -1.6078964495986192, -1.8405426317919984, -2.0944750803628795, 
-2.365553194552863, -2.6620491486053948, -2.981312017027194, -3.327768412621738, 
-3.7003593850891376, -4.103044773540411, -4.532941621672544, -5.005554070406365, 
-5.506453445437543, -6.047848080069208, -6.622540021618403, -7.255680895869562, 
-7.886381892918687]


p5005=[-0.05727536174867694, -0.1163763801103461, -0.17735184983000987, -0.2403621321510408, 
      -0.3055015010830897, -0.3727909039203633, -0.44223122041247787, -0.5144366459995461, 
      -0.5882411141685462, -0.6652531716676773, -0.7452928058677919, -0.827375315967644, 
      -0.9133956112830524, -1.0009892553907744, -1.09317815017993, -1.1884524393772522, 
      -1.2876992411895636, -1.390378273348873, -1.4955663927918894, -1.6076993790594143, 
      -1.7227507452267554, -1.8416478646327057, -1.9642685303310374, -2.0940225213774077, 
      -2.2287199781849245, -2.366865147270387, -2.5111418347415895, -2.661645850724467, 
      -2.8217163347785106, -2.978692850589091, -3.1483942021215507, -3.3289252077696663, 
      -3.5094106659310045, -3.698117929716185, -3.898070121231993, -4.101815373366526, 
      -4.313468727103354, -4.535161842267636, -4.766514229464233, -5.009897516321222, 
      -5.255547995796305, -5.506056207043057, -5.7770915367927635, -6.051149330710743, 
      -6.33199452523826, -6.624115641170627, -6.940265144330213, -7.2444608028126956, 
      -7.5782554499667745, -7.919295867480097]

data5005=[-0.057287312146978485, -0.11637839434579826, -0.1773950104266636, -0.24035747694173695, -0.3054360617904294, -0.3726544142328141, -0.4421498856160561, -0.5140103876637881, -0.5884118415343114, -0.6653849693774032, -0.7450879779533817, -0.8276134829335682, -0.9130471682312521, -1.0016931278319081, -1.0935538485510332, -1.1887570634889961, -1.2875398108848464, -1.3901424731148646, -1.4966819999470995, -1.6071675354415373, -1.7219707615027873, -1.8412769689043396, -1.9652935447788304, -2.0939738053733628, -2.2278778629312166, -2.36715325457089, -2.511836726009284, -2.6623755637215685, -2.818449284885411, -2.981461019074174, -3.1505580186865685, -3.3259687082644476, -3.508990311575709, -3.69855973218464, -3.896451251944109, -4.102081666568921, -4.315825870827517, -4.53704663391646, -4.765667924175767, -5.003502201449461, -5.249397210827873, -5.50868691643065, -5.773744878487781, -6.046753444876749, -6.32899499343564, -6.629598112264624, -6.9306887522657545, -7.241878401932671, -7.574859539515083, -7.90613090654366]


data0505=[-0.057029308644971195, -0.11587371956097829, -0.17660351798194507, -0.23933064578341368, -0.3041105505969933, -0.37098319187657663, -0.4402061836371246, -0.5116789043730329, -0.585834591437888, -0.6622327151208672, -0.7415201222787698, -0.8236351975252011, -0.9084156221104706, -0.9965924960165878, -1.0879102255849433, -1.18233690751529, -1.2811078405983403, -1.3828015082388676, -1.4886837394253571, -1.5990422104763382, -1.7129689359670088, -1.8319611561788371, -1.9545923656553472, -2.0832740363144238, -2.2163107959144175, -2.35404813863063, -2.4975380105922804, -2.648471514320462, -2.802871285533179, -2.9661842480695446, -3.1343136530677964, -3.308569979106931, -3.491207158453944, -3.6800511386232637, -3.8785381822383864, -4.081908116394582, -4.296686720466875, -4.512796586445351, -4.746249996369944, -4.981258061735583, -5.232692560631473, -5.4873457640011365, -5.754496989200702, -6.023702655486713, -6.313130933280817, -6.610606903690939, -6.909376592601037, -7.217573900207179, -7.555393864311317, -7.886480081237841]

data0105=[-0.14684972345610534, -0.30619471213986177, -0.4778292174441306, -0.6664775576892566, -0.8712331202582271, -1.0933674071375257, -1.3401638067697448, -1.607309529049806, -1.9037862887302104, -2.2329001810223588, -2.5933341304452124, -2.98662388119, -3.4168479148437685, -3.908532105714981, -4.440840347176816, -5.0286475450730395, -5.66599114797381, -6.372651762756623, -7.135879965577906, -7.9392464467960915]

data00505=[-0.3078385359406035, -0.6707218582820337, -1.1008406897104512, -1.624208233549552, -2.247619275582242, -3.0103704913990983, -3.945424423570766, -5.069204467295277, -6.411462750913483, -8.025061210097501]

data1005=[-0.14590721242783664, -0.3039546014830905, -0.4761165390662196, -0.6615210700714456, -0.8637887744641269, -1.086812006663911, -1.3295953450091438, -1.5966951474231552, -1.8912316883141607, -2.2139520649249063, -2.5719244922530766, -2.9636896653101656, -3.397099190730011, -3.8746267922015467, -4.399308713223646, -4.979119912060302, -5.614208259543505, -6.308861087249878, -7.063760176809579, -7.886440166123978]

N=1000
# 生成示例数据（已知曲线)
x = x10
y = np.array(data1005)

# 进行多项式拟合
degree = 10  # 选择多项式阶数
coefficients = np.polyfit(x, y, degree)

#coefficients[-1]=0

# 生成多项式函数
poly_func = np.poly1d(coefficients)

# 显示多项式
print("拟合的多项式为：")
print(poly_func)

sump=0
for i in range(N):
    sump+=poly_func(i+1)
print(poly_func(N+1)-sump/N)

# 绘制原始数据和拟合曲线
x_fit = np.linspace(min(x), max(x), 100)
y_fit = poly_func(x_fit)

plt.scatter(x, y, color='red', label='Original Data')
plt.plot(x_fit, y_fit, label=f'Fitted Polynomial (degree={degree})')
plt.legend()
plt.xlabel('x')
plt.ylabel('y')
plt.title('Polynomial Fit')
plt.show()
