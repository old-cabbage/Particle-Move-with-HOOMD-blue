import matplotlib.pyplot as plt


packing_density_0=0.3
total_sdf_xcompression=[4.9999999999999975e-05, 0.00015000000000000037, 0.00025000000000000017, 0.00035000000000000005, 0.0004499999999999995, 0.0005500000000000005, 0.0006499999999999992, 0.0007500000000000006, 0.0008500000000000022, 0.000950000000000002, 0.0010499999999999986, 0.0011499999999999985, 0.001250000000000001, 0.0013500000000000003, 0.0014500000000000038, 0.001549999999999998, 0.0016500000000000024, 0.0017500000000000013, 0.0018499999999999981, 0.0019500000000000006, 0.002049999999999998, 0.0021500000000000048, 0.0022500000000000016, 0.0023499999999999966, 0.002450000000000002, 0.002549999999999997, 0.0026500000000000056, 0.002749999999999999, 0.0028499999999999997, 0.002950000000000004, 0.0030499999999999976, 0.0031500000000000026, 0.0032499999999999964, 0.003350000000000003, 0.0034500000000000047, 0.003549999999999998, 0.003649999999999992, 0.003749999999999994, 0.0038500000000000058, 0.003950000000000006, 0.004049999999999999, 0.004149999999999991, 0.0042499999999999925, 0.004350000000000006, 0.004450000000000006, 0.004549999999999999, 0.004649999999999991, 0.00474999999999999, 0.004850000000000008, 0.0049500000000000065, 0.00505, 0.005149999999999991, 0.005249999999999989, 0.005350000000000006, 0.005450000000000003, 0.005550000000000005, 0.005649999999999999, 0.005749999999999996, 0.005850000000000011, 0.005950000000000007, 0.00605, 0.006149999999999992, 0.006249999999999988, 0.00635, 0.006449999999999996, 0.006550000000000013, 0.006650000000000006, 0.0067500000000000025, 0.006850000000000012, 0.006950000000000009, 0.00705, 0.007149999999999992, 0.007249999999999987, 0.007349999999999996, 0.007449999999999992, 0.007549999999999982, 0.007650000000000011, 0.007750000000000007, 0.007850000000000015, 0.007950000000000011, 0.00805, 0.008149999999999992, 0.008249999999999987, 0.008349999999999995, 0.008449999999999989, 0.00854999999999998, 0.008650000000000017, 0.008750000000000011, 0.008850000000000018, 0.008950000000000012, 0.00905, 0.009149999999999993, 0.009249999999999987, 0.009349999999999992, 0.009449999999999984, 0.009549999999999977, 0.009650000000000021, 0.009750000000000014, 0.009850000000000018, 0.009950000000000013]

total_sdf_sdfcompression=[8.244655999999999, 8.231007999999997, 8.225476, 8.221092, 8.219442, 8.225289999999998, 8.212578, 8.200828, 8.188367999999999, 8.201353999999995, 8.187230000000005, 8.193831999999999, 8.179596, 8.170900000000001, 8.169950000000002, 8.169086000000004, 8.167866, 8.161793999999999, 8.164276000000006, 8.142943999999998, 8.145807999999995, 8.143842, 8.136109999999997, 8.135677999999997, 8.129309999999997, 8.121348000000001, 8.119492000000001, 8.114934000000002, 8.111722000000004, 8.107193999999998, 8.109, 8.107499999999998, 8.098165999999999, 8.085008, 8.089431999999997, 8.090779999999997, 8.082292000000002, 8.076918000000003, 8.070597999999999, 8.081591999999999, 8.061795999999998, 8.055695999999998, 8.064594000000001, 8.04643, 8.046045999999997, 8.046500000000002, 8.035338, 8.034067999999998, 8.04484, 8.022587999999999, 8.016829999999997, 8.016558000000002, 8.008337999999998, 8.016891999999999, 8.009386000000001, 8.000850000000002, 7.999859999999996, 7.983280000000003, 7.983144000000001, 7.9815780000000025, 7.9671720000000015, 7.985016000000003, 7.966676000000002, 7.956235999999998, 7.955352000000001, 7.955911999999999, 7.9496139999999995, 7.9357619999999995, 7.9400100000000045, 7.940046000000002, 7.925647999999996, 7.926344000000001, 7.921798000000003, 7.920038000000001, 7.909905999999999, 7.909752, 7.910806, 7.901918000000002, 7.901004000000001, 7.890922, 7.893749999999998, 7.884549999999998, 7.876024000000002, 7.883144000000001, 7.865528000000003, 7.876413999999996, 7.8625919999999985, 7.863508, 7.860298, 7.869333999999998, 7.854507999999994, 7.841942000000001, 7.845437999999999, 7.834154000000005, 7.8415459999999975, 7.827588, 7.825535999999999, 7.828329999999999, 7.816835999999995, 7.812422000000001]


plt.plot(total_sdf_xcompression,total_sdf_sdfcompression,label=r"$\phi={}$".format(packing_density_0),
                linestyle='-',linewidth=0.5,color='purple'
                )

plt.plot(total_sdf_xcompression,total_sdf_sdfcompression,marker='o',
        color='purple',
        markersize=10,            # 标记大小
        markerfacecolor='none',   # 标记内部为空心
        markeredgecolor='purple',  # 标记边框颜色为黑色
        markeredgewidth=1,      # 标记边框宽度
        alpha=0.2
        )

# 使用 scatter 绘制半透明的标记点
#plt.scatter(total_sdf_xcompression,total_sdf_sdfcompression, color='purple',
#             s=100, alpha=0.5,markerfacecolor='none',markereredgewidth=1)

plt.legend()
# 添加标题和标签
plt.title('Scale Distribution Function')
plt.xlabel('distance r')
plt.ylabel('SDF(r)')
plt.show()